{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAGjC,IAAII,EAAQ,KACRC,EAAO,KACPC,EAAS,KACTC,EAAW,EACXC,EAAU,KACVC,EAAW,KAqCf,SAASC,EAAaC,EAAUC,GAWhC,IAAuBC,EAAUZ,GAAVY,EAVPF,EAUiBV,EAVPW,EAWjB,IAAIE,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEI,SAAAN,E,MAAUZ,IAEpBe,EAAO,CAAEG,SAAAN,E,MAAUZ,QAfpBmB,MAAK,EAAGD,SAAAE,EAAQpB,MAAEA,MACjBqB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBH,QAAiBpB,UAE/DwB,OAAM,EAAGN,SAAAO,EAAQzB,MAAEA,MAClBqB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAoBD,QAAezB,UAiBjEJ,EAAKI,MAAM2B,iBAAiB,UApCTC,IACjBzB,EAAQ,EACRA,EAAQ0B,OAAOD,EAAEE,OAAOC,UAmC1BnC,EAAKK,KAAK0B,iBAAiB,UAjCTC,IAChBxB,EAAO,EACPA,EAAOyB,OAAOD,EAAEE,OAAOC,UAgCzBnC,EAAKM,OAAOyB,iBAAiB,UA9BTC,IAClBvB,EAAS,EACTA,EAASwB,OAAOD,EAAEE,OAAOC,UA6B3BnC,EAAKC,KAAK8B,iBAAiB,UA5DNK,IACnBA,EAAMC,iBACNC,cAAc1B,GACdF,EAAW,EACXC,EAAUJ,EAEVgC,YAAW,KACT1B,EAAaH,EAAUC,GACvBC,EAAW4B,aAAY,KACrB7B,GAAWH,EAEPE,IAAaD,EAAS,GACxB6B,cAAc1B,GAGhBF,GAAY,EACZG,EAAaH,EAAUC,KACtBH,KACFD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// import\n\n// Refs\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n// CONSTANTS\nlet DELAY = null;\nlet STEP = null;\nlet AMOUNT = null;\nlet position = 1;\nlet timerMS = null;\nlet timerInt = null;\n\n// func\nconst getValueForm = event => {\n  event.preventDefault();\n  clearInterval(timerInt);\n  position = 1;\n  timerMS = DELAY;\n\n  setTimeout(() => {\n    alertPromise(position, timerMS);\n    timerInt = setInterval(() => {\n      timerMS += STEP;\n\n      if (position === AMOUNT - 1) {\n        clearInterval(timerInt);\n      }\n\n      position += 1;\n      alertPromise(position, timerMS);\n    }, STEP);\n  }, DELAY);\n};\n\nconst delayInput = e => {\n  DELAY = 0;\n  DELAY = Number(e.target.value);\n};\nconst stepInput = e => {\n  STEP = 0;\n  STEP = Number(e.target.value);\n};\nconst amountInput = e => {\n  AMOUNT = 0;\n  AMOUNT = Number(e.target.value);\n};\n\nfunction alertPromise(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\n// promis\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\n// listener\nrefs.delay.addEventListener('change', delayInput);\nrefs.step.addEventListener('change', stepInput);\nrefs.amount.addEventListener('change', amountInput);\nrefs.form.addEventListener('submit', getValueForm);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$DELAY","$47d4ff9957288465$var$STEP","$47d4ff9957288465$var$AMOUNT","$47d4ff9957288465$var$position","$47d4ff9957288465$var$timerMS","$47d4ff9957288465$var$timerInt","$47d4ff9957288465$var$alertPromise","position1","delay1","position4","Promise","resolve","reject","Math","random","position","then","position2","$parcel$interopDefault","Notify","success","catch","position3","failure","addEventListener","e","Number","target","value","event","preventDefault","clearInterval","setTimeout","setInterval"],"version":3,"file":"03-promises.d0838891.js.map"}