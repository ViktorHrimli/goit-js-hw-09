{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAE/B,IAAIC,EAAW,EACXC,EAAU,KA0Bd,SAASC,EAAaC,EAAUC,GAUhC,IAAuBC,EAAUC,GAAVD,EATPF,EASiBG,EATPF,EAUjB,IAAIG,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEI,SAAAP,E,MAAUC,IAEpBG,EAAO,CAAEG,SAAAP,E,MAAUC,QAdpBO,MAAK,EAAGD,SAAAE,EAAQR,MAAEA,MACjBS,EAAArB,GAASsB,OAAOC,QAAQ,uBAAqBH,QAAiBR,UAE/DY,OAAM,EAAGN,SAAAO,EAAQb,MAAEA,MAClBS,EAAArB,GAASsB,OAAOI,QAAQ,sBAAoBD,QAAeb,UAcjEV,EAAKC,KAAKwB,iBAAiB,UA5C3B,SAAsBC,GACpBA,EAAMC,iBACNvB,EAAW,EACX,IAAIM,MAAEA,EAAKkB,KAAEA,EAAIC,OAAEA,GAAWH,EAAMI,cAEhCC,EAAWC,OAAOtB,EAAMuB,OACxBC,EAAUF,OAAOJ,EAAKK,OACtBE,EAAYH,OAAOH,EAAOI,OAE9BG,YAAW,KACT/B,EAAU0B,EACVzB,EAAaF,EAAU2B,GACvB,MAAMM,EAAWC,aAAY,KAC3BjC,GAAW6B,EAEP9B,IAAa+B,EAAY,GAC3BI,cAAcF,GAEhBjC,GAAY,EACZE,EAAaF,EAAUC,KACtB6B,KACFH","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// import\nconst refs = {\n  form: document.querySelector('.form'),\n};\nlet position = 1;\nlet totalMS = null;\n\nfunction getValueForm(event) {\n  event.preventDefault();\n  position = 1;\n  let { delay, step, amount } = event.currentTarget;\n\n  let dalayNum = Number(delay.value);\n  let stepNum = Number(step.value);\n  let amountNum = Number(amount.value);\n\n  setTimeout(() => {\n    totalMS = dalayNum;\n    alertPromise(position, dalayNum);\n    const timerInt = setInterval(() => {\n      totalMS += stepNum;\n\n      if (position === amountNum - 1) {\n        clearInterval(timerInt);\n      }\n      position += 1;\n      alertPromise(position, totalMS);\n    }, stepNum);\n  }, dalayNum);\n}\n\nfunction alertPromise(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n// promis\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\nrefs.form.addEventListener('submit', getValueForm);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$position","$47d4ff9957288465$var$totalMS","$47d4ff9957288465$var$alertPromise","position1","delay1","position4","delay","Promise","resolve","reject","Math","random","position","then","position2","$parcel$interopDefault","Notify","success","catch","position3","failure","addEventListener","event","preventDefault","step","amount","currentTarget","dalayNum","Number","value","stepNum","amountNum","setTimeout","timerInt","setInterval","clearInterval"],"version":3,"file":"03-promises.460ab952.js.map"}